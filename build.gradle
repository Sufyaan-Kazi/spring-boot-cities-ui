buildscript {
    ext {
        springBootVersion = '1.5.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
    }
}

plugins {
    id "io.spring.dependency-management" version "1.0.2.RELEASE"
    id 'org.springframework.boot' version '1.5.2.RELEASE'
}
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'war'

war {
    baseName = 'cities-ui'
}

repositories {
    jcenter()
    mavenCentral()
}

allprojects { 
	if (project.hasProperty('buildversion')) { 
		project.version = project.buildversion 
	} else { 
		project.version = '1.0'
	} 
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('com.fasterxml.jackson.core:jackson-databind')
    compile('org.springframework.boot:spring-boot-starter-hateoas')
    compile('org.springframework.data:spring-data-commons')
    compile("org.springframework.boot:spring-boot-starter-actuator")
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    testCompile('org.springframework.boot:spring-boot-starter-test') 
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}
